{
  "$id": "https://schemas.tillhub.com/v0/voucher_systems.update.request.schema.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "additionalProperties": false,
  "type": "object",
  "required": [],
  "properties": {
    "name": {
      "type": "string",
      "example": "Miles and More",
      "minLength": 1,
      "maxLength": 128
    },
    "description": {
      "oneOf": [
        {
          "type": "string",
          "minLength": 1,
          "maxLength": 4096
        },
        {
          "type": "null"
        }
      ]
    },
    "deleted": {
      "type": "boolean"
    },
    "active": {
      "type": "boolean"
    },
    "branches": {
      "oneOf": [
        {
          "type": "array",
          "description": "If defined then only these branches will be using this system. If not defined, there will be no restrictions on which branches can use this system.",
          "minItems": 1,
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        {
          "type": "null"
        }
      ]
    },
    "region": {
      "oneOf": [
        {
          "type": "string",
          "description": "The international format for regional sub category of a country e.g. a state or province."
        },
        {
          "type": "null"
        }
      ]
    },
    "country": {
      "oneOf": [
        {
          "type": "string",
          "description": "A country as ISO Alpha-2 code.",
          "minLength": 2,
          "maxLength": 2,
          "pattern": "^[A-Z]{2}$"
        },
        {
          "type": "null"
        }
      ]
    },
    "metadata": {
      "oneOf": [
        {
          "type": "object"
        },
        {
          "type": "null"
        }
      ]
    },
    "hooks": {
      "oneOf": [
        {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "get": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "incoming": {
                  "oneOf": [
                    {
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "endpoint",
                        "method"
                      ],
                      "properties": {
                        "endpoint": {
                          "type": "string",
                          "description": "The url of the cloud based function",
                          "example": "https://us-central1-<project-id>.cloudfunctions.net/date"
                        },
                        "method": {
                          "oneOf": [
                            {
                              "type": "string",
                              "enum": [
                                "GET",
                                "POST",
                                "PUT"
                              ]
                            },
                            {
                              "type": "null"
                            }
                          ]
                        },
                        "auth": {
                          "type": "object",
                          "additionalProperties": false,
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "basic",
                                "token",
                                "bearer_token"
                              ]
                            },
                            "token": {
                              "type": "string"
                            },
                            "user": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "example": {
                        "endpoint": "https://us-central1-<project-id>.cloudfunctions.net/date",
                        "method": "GET",
                        "auth": {
                          "type": "basic",
                          "user": "some_user_name_123123",
                          "token": "abc123456789"
                        }
                      },
                      "description": "This hook is intended for the case when a voucher is queried by voucher-code in the endpoint \"/api/v0/vouchers/:voucher_id\". This hook allows to modify the code before the query continues and it receives the code in the request body in the form of { code: \"some string\" }. The endpoint expects from the hook response a simple string, e.g. \"123456abc\"."
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "outgoing": {
                  "oneOf": [
                    {
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "endpoint",
                        "method"
                      ],
                      "properties": {
                        "endpoint": {
                          "type": "string",
                          "description": "The url of the cloud based function",
                          "example": "https://us-central1-<project-id>.cloudfunctions.net/date"
                        },
                        "method": {
                          "oneOf": [
                            {
                              "type": "string",
                              "enum": [
                                "GET",
                                "POST",
                                "PUT"
                              ]
                            },
                            {
                              "type": "null"
                            }
                          ]
                        },
                        "auth": {
                          "type": "object",
                          "additionalProperties": false,
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "basic",
                                "token",
                                "bearer_token"
                              ]
                            },
                            "token": {
                              "type": "string"
                            },
                            "user": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "example": {
                        "endpoint": "https://us-central1-<project-id>.cloudfunctions.net/date",
                        "method": "GET",
                        "auth": {
                          "type": "basic",
                          "user": "some_user_name_123123",
                          "token": "abc123456789"
                        }
                      },
                      "description": "This hook is used in the endpoint \"/api/v0/vouchers/:voucher_id\" and is applied after the results returned from the database query and before they are returned to the caller. The hook receives the voucher in the request body in the format of { vouchers: [{ <voucherData> }] }. The response from the hook is expected to be an array of (voucher) objects."
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          }
        },
        {
          "type": "null"
        }
      ]
    },
    "increments": {
      "description": "Define a client side increment restriction. E.g. only allow a a voucher to be issued with 5 EUR minimum.",
      "oneOf": [
        {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "type",
                  "currency",
                  "value"
                ],
                "properties": {
                  "currency": {
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 3
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "amount"
                    ]
                  },
                  "value": {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 100000,
                    "multipleOf": 0.01
                  }
                }
              }
            ]
          }
        },
        {
          "type": "null"
        }
      ]
    },
    "actions": {
      "description": "Define actions that can e.g. be put on a tile.",
      "oneOf": [
        {
          "type": "array",
          "items": {
            "description": "Available actions for this system"
          }
        },
        {
          "type": "null"
        }
      ]
    },
    "scan_prefixes": {
      "description": "Define whether and now the POS should cut of a prefix from a scan to understand those vouchers.",
      "oneOf": [
        {
          "type": "array",
          "items": {
            "description": "Available scan prefixes for this system"
          }
        },
        {
          "type": "null"
        }
      ]
    },
    "product": {
      "description": "The Tillhub product resource associated with this sytsem to e.g. sell a voucher.",
      "oneOf": [
        {
          "type": "string",
          "format": "uuid",
          "example": "43847a66-97dc-4ac2-8e8a-c44920e1f22f"
        },
        {
          "type": "null"
        }
      ]
    },
    "external": {
      "description": "Make this voucher to follow external logic",
      "type": "boolean",
      "default": false
    },
    "external_system_type": {
      "description": "Define which voucher API implementation to follow",
      "oneOf": [
        {
          "type": "string",
          "enum": [
            "tillhub-voucher-api",
            "fleurop",
            "zalando"
          ]
        },
        {
          "type": "null"
        }
      ]
    },
    "external_system_id": {
      "description": "Define here whether this voucher system is an external one and which ID it references at the provider. E.g. a Tillhub Account can talk to another one, but permissions and this reference need to be set.",
      "default": null,
      "oneOf": [
        {
          "description": "Additional parameter for external voucher systems, e.g. Fleurop Voucher Type specifier",
          "type": "string",
          "maxLength": 128,
          "example": "0023903408"
        },
        {
          "type": "null"
        }
      ]
    },
    "templates": {
      "description": "Define attribute templates for vouchers that will be created from this system. Behaviour of vouchers can always be overriden.",
      "oneOf": [
        {
          "type": "array",
          "items": {
            "description": "Define voucher templates that can inherit attributes and be bound to e.g. creation actions.",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid"
              },
              "name": {
                "type": "string",
                "minLength": 1,
                "maxLength": 256
              },
              "description": {
                "oneOf": [
                  {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 4096
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "code_generation": {
                "default": "request",
                "description": "Information if code should be picked from existing barcodes (scan) or requested from the API (request)",
                "oneOf": [
                  {
                    "type": "string",
                    "enum": [
                      "scan",
                      "request"
                    ]
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "attributes": {
                "type": "object",
                "additionalProperties": false,
                "description": "Inheritable properties from Tillhub Vouchers",
                "required": [
                  "format",
                  "format_type"
                ],
                "properties": {
                  "format": {
                    "description": "The visual format this voucher conforms to.",
                    "example": "xxxx xxxx xxxx",
                    "type": "string"
                  },
                  "format_type": {
                    "description": "Define which characters can be used during a voucher creation. E.g. numeric XXXX XXXX will be a voucher code with 8 random numbers divided by a space. The lookup on the voucher will be made on code and code_normalised equally (if defined).",
                    "type": "string",
                    "enum": [
                      "numeric",
                      "alphanumeric",
                      "alphabetic"
                    ]
                  },
                  "amount_max": {
                    "description": "",
                    "anyOf": [
                      {
                        "type": "number",
                        "minimum": 0
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "amount": {
                    "description": "The current value of this voucher.",
                    "example": "10.99",
                    "anyOf": [
                      {
                        "type": "number",
                        "minimum": 0
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "increment_amount_minimum": {
                    "description": "Define a server / client side increment restriction. E.g. only allow a a voucher to be issued or altered with 5 EUR minimum.",
                    "anyOf": [
                      {
                        "type": "number",
                        "minimum": 0,
                        "maximum": 100000
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "currency": {
                    "description": "",
                    "type": "string"
                  },
                  "issuable": {
                    "description": "",
                    "type": "boolean"
                  },
                  "reissuable": {
                    "description": "",
                    "type": "boolean"
                  },
                  "comment": {
                    "description": "An arbitrary comment from a user for this voucher.",
                    "oneOf": [
                      {
                        "type": "string",
                        "maxLength": 1024
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "expires_at": {
                    "description": "Define until when this voucher should be usable. This will be hard validated on the API when incrementing / decrementing a voucher.",
                    "oneOf": [
                      {
                        "type": "string",
                        "format": "date-time"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "customer": {
                    "description": "The reference to a customer. The layout is an object to allow for imported vouchers to include any kind of customer reference. In the Tillhub voucher case the object will have at least an ID reference to the customer if existing.",
                    "anyOf": [
                      {
                        "type": "object"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "title": {
                    "description": "",
                    "type": "string"
                  },
                  "partial_redemption": {
                    "description": "",
                    "type": "boolean"
                  },
                  "active": {
                    "description": "Define whether this voucher is currently active.",
                    "type": "boolean"
                  },
                  "bound_to": {
                    "description": "",
                    "type": "object"
                  },
                  "namespace": {
                    "description": "",
                    "type": "string"
                  },
                  "type": {
                    "description": "",
                    "type": "string",
                    "enum": [
                      "amount",
                      "discount",
                      "product"
                    ]
                  },
                  "regions": {
                    "description": "Regions to limit this voucher to.",
                    "oneOf": [
                      {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "minLength": 2,
                          "maxLength": 2,
                          "pattern": "^[A-Z]{2}$"
                        }
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "limited_to_region": {
                    "description": "Define whether to limit this voucher in a particular region.",
                    "type": "boolean"
                  },
                  "refundable": {
                    "description": "Define whether this voucher can be refunded or be used in a refund scenario.",
                    "type": "boolean"
                  },
                  "mutable": {
                    "description": "",
                    "type": "boolean"
                  },
                  "exchange_for_cash": {
                    "description": "Define whether the value or rest value can be paid out with cash.",
                    "type": "boolean"
                  },
                  "restriction_single_transaction": {
                    "description": "",
                    "type": "boolean"
                  },
                  "is_campaign": {
                    "description": "Mark this voucher to be a campaign itself. This should be used if you issue multiple vouchers with the same code and do not want to deduct value from it.",
                    "type": "boolean"
                  },
                  "product": {
                    "default": null,
                    "oneOf": [
                      {
                        "type": "string",
                        "format": "uuid",
                        "description": "The Tillhub product resource reference ID associated with this voucher.",
                        "example": "43847a66-97dc-4ac2-8e8a-c44920e1f22f"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        {
          "type": "null"
        }
      ]
    }
  }
}
